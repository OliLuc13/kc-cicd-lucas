version: 2.1

jobs:
  build:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - run:
          name: Instalar dependencias
          command: npm install

  test:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - run:
          name: Instalar dependencias
          command: npm install
      - run:
          name: Ejecutar tests y generar cobertura
          command: npm test
      - store_artifacts:
          path: coverage
          destination: informe-de-cobertura

  lint:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - run:
          name: Instalar dependencias
          command: npm install
      - run:
          name: Ejecutar linting
          command: npm run lint

  analisis_estatico:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - run:
          name: Instalar dependencias
          command: npm install
      - run:
          name: Ejecutar análisis estático de código
          command: |
            npx sonarqube-scanner \
              -Dsonar.projectKey=mi-app \
              -Dsonar.sources=. \
              -Dsonar.host.url=${SONAR_HOST_URL} \
              -Dsonar.login=${SONAR_TOKEN}

  analisis_vulnerabilidades:
    docker:
      - image: cimg/python:3.9
    steps:
      - checkout
      - run:
          name: Instalar GitGuardian CLI
          command: pip install ggshield
      - run:
          name: Ejecutar análisis de vulnerabilidades con GitGuardian
          command: ggshield scan repo .

  generar_artefacto:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - run:
          name: Instalar dependencias
          command: npm install
      - run:
          name: Generar artefacto de la aplicación
          command: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - .

  publicar_artefacto:
    docker:
      - image: cimg/node:lts
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Publicar artefacto en el repositorio
          command: |
            echo "Publicando artefacto..."
            # Reemplaza este comando con el necesario para publicar tu artefacto

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - lint:
          requires:
            - build
      - analisis_estatico:
          requires:
            - build
      - analisis_vulnerabilidades:
          requires:
            - build
      - generar_artefacto:
          requires:
            - test
          filters:
            branches:
              only:
                - master
                - main
      - publicar_artefacto:
          requires:
            - generar_artefacto
          filters:
            branches:
              only:
                - master
                - main
